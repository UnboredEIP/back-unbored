name: CI server

on: pull_request

env:
  IMAGE_TAG_MONGODB: mongodb
  IMAGE_TAG_SERVER: server

jobs:
  format:
    name: Server - Format
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build the Docker image
        run: docker build -t $IMAGE_TAG_SERVER --target=create-build .
      - name: Run Prettier
        run: docker run $IMAGE_TAG_SERVER sh -c 'npm run format:verify'
  lint:
    name: Server - Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Build the Docker image
        run: docker build -t $IMAGE_TAG_SERVER --target=create-build .
      - name: Run ESLint
        run: docker run $IMAGE_TAG_SERVER sh -c 'npm run lint:verify'
  test_and_analyze:
    name: Server - Test and Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Set up MongoDB
        run: |
          echo "$DOCKER_ENV_FILE" > .env
          docker compose up -d $IMAGE_TAG_MONGODB
        env:
          DOCKER_ENV_FILE: ${{ secrets.DOCKER_ENV_FILE }}
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm run test:cov
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
